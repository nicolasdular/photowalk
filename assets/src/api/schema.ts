/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/auth/request-magic-link": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["PWeb.AuthController.request_magic_link"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/signup": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["PWeb.AuthController.signup"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/collections": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List collections */
        get: operations["PWeb.CollectionController.index"];
        put?: never;
        /** Create a collection */
        post: operations["PWeb.CollectionController.create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/collections/{collection_id}/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List users in a collection */
        get: operations["PWeb.CollectionController.list_users"];
        put?: never;
        /** Add a user to a collection */
        post: operations["PWeb.CollectionController.add_user"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/collections/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Show a collection */
        get: operations["PWeb.CollectionController.show"];
        /** Update a collection */
        put: operations["PWeb.CollectionController.update"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Update a collection */
        patch: operations["PWeb.CollectionController.update (2)"];
        trace?: never;
    };
    "/api/photos": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List photos */
        get: operations["PWeb.PhotoController.index"];
        put?: never;
        /** Upload a photo */
        post: operations["PWeb.PhotoController.create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/photos/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Delete photo */
        delete: operations["PWeb.PhotoController.delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/user/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["PWeb.UserController.me"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /**
         * AddUserToCollectionRequest
         * @description Parameters for adding a user to a collection
         */
        AddUserToCollectionRequest: {
            /**
             * Format: email
             * @description Email of the user to add
             */
            email: string;
        };
        /**
         * CollectionCreateRequest
         * @description Parameters for creating a collection
         */
        CollectionCreateRequest: {
            /** @description Description of the collection */
            description?: string;
            /** @description Title of the collection */
            title: string;
        };
        /**
         * CollectionDetail
         * @description Collection data returned from show/create/update endpoints
         */
        CollectionDetail: {
            description?: string | null;
            /** Format: uuid */
            id: string;
            /** Format: date-time */
            inserted_at: string;
            photos: ({
                allowed_to_delete: boolean;
                /** Format: uri */
                full_url: string;
                /** Format: uuid */
                id: string;
                /** Format: date-time */
                inserted_at: string;
                /** Format: uri */
                thumbnail_url: string;
                title: string;
                /** Format: date-time */
                updated_at: string;
            } & {
                /**
                 * User
                 * @description A user in the system
                 */
                user: {
                    /** Format: uri */
                    avatar_url: string | null;
                    /** Format: email */
                    email: string;
                    /** Format: uuid */
                    id: string;
                    name: string;
                };
            })[];
            title: string;
            /** Format: date-time */
            updated_at: string;
        };
        /**
         * CollectionListResponse
         * @description List of collections for the current user
         */
        CollectionListResponse: {
            data: {
                description?: string | null;
                /** Format: uuid */
                id: string;
                /** Format: date-time */
                inserted_at: string;
                /** @description Up to four most recent photos in the collection */
                thumbnails: {
                    allowed_to_delete: boolean;
                    /** Format: uri */
                    full_url: string;
                    /** Format: uuid */
                    id: string;
                    /** Format: date-time */
                    inserted_at: string;
                    /** Format: uri */
                    thumbnail_url: string;
                    title: string;
                    /** Format: date-time */
                    updated_at: string;
                }[];
                title: string;
                /** Format: date-time */
                updated_at: string;
            }[];
        };
        /**
         * CollectionShowResponse
         * @description A single collection with its photos
         */
        CollectionShowResponse: {
            /**
             * CollectionDetail
             * @description Collection data returned from show/create/update endpoints
             */
            data: {
                description?: string | null;
                /** Format: uuid */
                id: string;
                /** Format: date-time */
                inserted_at: string;
                photos: ({
                    allowed_to_delete: boolean;
                    /** Format: uri */
                    full_url: string;
                    /** Format: uuid */
                    id: string;
                    /** Format: date-time */
                    inserted_at: string;
                    /** Format: uri */
                    thumbnail_url: string;
                    title: string;
                    /** Format: date-time */
                    updated_at: string;
                } & {
                    /**
                     * User
                     * @description A user in the system
                     */
                    user: {
                        /** Format: uri */
                        avatar_url: string | null;
                        /** Format: email */
                        email: string;
                        /** Format: uuid */
                        id: string;
                        name: string;
                    };
                })[];
                title: string;
                /** Format: date-time */
                updated_at: string;
            };
        };
        /**
         * CollectionSummary
         * @description Collection data used in list endpoints
         */
        CollectionSummary: {
            description?: string | null;
            /** Format: uuid */
            id: string;
            /** Format: date-time */
            inserted_at: string;
            /** @description Up to four most recent photos in the collection */
            thumbnails: {
                allowed_to_delete: boolean;
                /** Format: uri */
                full_url: string;
                /** Format: uuid */
                id: string;
                /** Format: date-time */
                inserted_at: string;
                /** Format: uri */
                thumbnail_url: string;
                title: string;
                /** Format: date-time */
                updated_at: string;
            }[];
            title: string;
            /** Format: date-time */
            updated_at: string;
        };
        /**
         * CollectionUpdateRequest
         * @description Parameters for updating a collection
         */
        CollectionUpdateRequest: {
            /** @description New description for the collection */
            description?: string;
            /** @description New title for the collection */
            title?: string;
        };
        /**
         * Error
         * @example {
         *       "error": "Invalid request parameters"
         *     }
         */
        Error: {
            /** @description Error message */
            error: string;
        };
        /** NotFoundError */
        NotFoundError: {
            /** @description Error message */
            error: string;
        };
        /**
         * PhotoDetail
         * @description Detailed representation of a photo including author information
         */
        PhotoDetail: {
            allowed_to_delete: boolean;
            /** Format: uri */
            full_url: string;
            /** Format: uuid */
            id: string;
            /** Format: date-time */
            inserted_at: string;
            /** Format: uri */
            thumbnail_url: string;
            title: string;
            /** Format: date-time */
            updated_at: string;
        } & {
            /**
             * User
             * @description A user in the system
             */
            user: {
                /** Format: uri */
                avatar_url: string | null;
                /** Format: email */
                email: string;
                /** Format: uuid */
                id: string;
                name: string;
            };
        };
        /**
         * PhotoListResponse
         * @description List of photos for the current user
         */
        PhotoListResponse: {
            data: {
                allowed_to_delete: boolean;
                /** Format: uri */
                full_url: string;
                /** Format: uuid */
                id: string;
                /** Format: date-time */
                inserted_at: string;
                /** Format: uri */
                thumbnail_url: string;
                title: string;
                /** Format: date-time */
                updated_at: string;
            }[];
        };
        /**
         * PhotoSummary
         * @description Summary representation of a photo
         */
        PhotoSummary: {
            allowed_to_delete: boolean;
            /** Format: uri */
            full_url: string;
            /** Format: uuid */
            id: string;
            /** Format: date-time */
            inserted_at: string;
            /** Format: uri */
            thumbnail_url: string;
            title: string;
            /** Format: date-time */
            updated_at: string;
        };
        /**
         * PhotoUploadRequest
         * @description Multipart payload accepting a single photo
         */
        PhotoUploadRequest: {
            /**
             * Format: uuid
             * @description Optional ID of the collection to add the photo to
             */
            collection_id?: string;
            /**
             * Format: binary
             * @description Image file to process
             */
            photo: string;
        };
        /** SignedInUserResponse */
        SignedInUserResponse: {
            /**
             * User
             * @description A user in the system
             */
            data: {
                /** Format: uri */
                avatar_url: string | null;
                /** Format: email */
                email: string;
                /** Format: uuid */
                id: string;
                name: string;
            };
        };
        /**
         * Success
         * @example {
         *       "message": "Request was successful",
         *       "success": true
         *     }
         */
        Success: {
            /** @description Success message */
            message: string;
            /** @description Indicates if the request was successful */
            success: boolean;
        };
        /**
         * User
         * @description A user in the system
         */
        User: {
            /** Format: uri */
            avatar_url: string | null;
            /** Format: email */
            email: string;
            /** Format: uuid */
            id: string;
            name: string;
        };
        /**
         * UserResponse
         * @description Response containing user data
         */
        UserResponse: {
            /**
             * User
             * @description A user in the system
             */
            data: {
                /** Format: uri */
                avatar_url: string | null;
                /** Format: email */
                email: string;
                /** Format: uuid */
                id: string;
                name: string;
            };
        };
        /**
         * UsersListResponse
         * @description List of users in a collection
         */
        UsersListResponse: {
            data: {
                /** Format: uri */
                avatar_url: string | null;
                /** Format: email */
                email: string;
                /** Format: uuid */
                id: string;
                name: string;
            }[];
        };
        /** ValidationErrors */
        ValidationErrors: {
            errors: {
                [key: string]: string[];
            };
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    "PWeb.AuthController.request_magic_link": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Input */
        requestBody?: {
            content: {
                "application/json": {
                    /**
                     * Format: email
                     * @description User's email address
                     */
                    email: string;
                };
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Success"];
                };
            };
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    "PWeb.AuthController.signup": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Email */
        requestBody?: {
            content: {
                "application/json": {
                    /** Format: email */
                    email: string;
                    /** Format: name */
                    name: string;
                };
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Success"];
                };
            };
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    "PWeb.CollectionController.index": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Collections */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        data: {
                            description?: string | null;
                            /** Format: uuid */
                            id: string;
                            /** Format: date-time */
                            inserted_at: string;
                            /** @description Up to four most recent photos in the collection */
                            thumbnails: {
                                allowed_to_delete: boolean;
                                /** Format: uri */
                                full_url: string;
                                /** Format: uuid */
                                id: string;
                                /** Format: date-time */
                                inserted_at: string;
                                /** Format: uri */
                                thumbnail_url: string;
                                title: string;
                                /** Format: date-time */
                                updated_at: string;
                            }[];
                            title: string;
                            /** Format: date-time */
                            updated_at: string;
                        }[];
                    };
                };
            };
        };
    };
    "PWeb.CollectionController.create": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description CollectionCreateRequest */
        requestBody: {
            content: {
                "application/json": {
                    /** @description Description of the collection */
                    description?: string;
                    /** @description Title of the collection */
                    title: string;
                };
            };
        };
        responses: {
            /** @description Created collection */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * CollectionDetail
                         * @description Collection data returned from show/create/update endpoints
                         */
                        data: {
                            description?: string | null;
                            /** Format: uuid */
                            id: string;
                            /** Format: date-time */
                            inserted_at: string;
                            photos: ({
                                allowed_to_delete: boolean;
                                /** Format: uri */
                                full_url: string;
                                /** Format: uuid */
                                id: string;
                                /** Format: date-time */
                                inserted_at: string;
                                /** Format: uri */
                                thumbnail_url: string;
                                title: string;
                                /** Format: date-time */
                                updated_at: string;
                            } & {
                                /**
                                 * User
                                 * @description A user in the system
                                 */
                                user: {
                                    /** Format: uri */
                                    avatar_url: string | null;
                                    /** Format: email */
                                    email: string;
                                    /** Format: uuid */
                                    id: string;
                                    name: string;
                                };
                            })[];
                            title: string;
                            /** Format: date-time */
                            updated_at: string;
                        };
                    };
                };
            };
            /** @description Validation errors */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        errors: {
                            [key: string]: string[];
                        };
                    };
                };
            };
        };
    };
    "PWeb.CollectionController.list_users": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Collection ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Users in collection */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        data: {
                            /** Format: uri */
                            avatar_url: string | null;
                            /** Format: email */
                            email: string;
                            /** Format: uuid */
                            id: string;
                            name: string;
                        }[];
                    };
                };
            };
            /** @description Collection not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "PWeb.CollectionController.add_user": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Collection ID */
                id: string;
            };
            cookie?: never;
        };
        /** @description AddUserToCollectionRequest */
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: email
                     * @description Email of the user to add
                     */
                    email: string;
                };
            };
        };
        responses: {
            /** @description User added to collection */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * User
                         * @description A user in the system
                         */
                        data: {
                            /** Format: uri */
                            avatar_url: string | null;
                            /** Format: email */
                            email: string;
                            /** Format: uuid */
                            id: string;
                            name: string;
                        };
                    };
                };
            };
            /** @description Collection not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Validation errors */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        errors: {
                            [key: string]: string[];
                        };
                    };
                };
            };
        };
    };
    "PWeb.CollectionController.show": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Collection ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Collection */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * CollectionDetail
                         * @description Collection data returned from show/create/update endpoints
                         */
                        data: {
                            description?: string | null;
                            /** Format: uuid */
                            id: string;
                            /** Format: date-time */
                            inserted_at: string;
                            photos: ({
                                allowed_to_delete: boolean;
                                /** Format: uri */
                                full_url: string;
                                /** Format: uuid */
                                id: string;
                                /** Format: date-time */
                                inserted_at: string;
                                /** Format: uri */
                                thumbnail_url: string;
                                title: string;
                                /** Format: date-time */
                                updated_at: string;
                            } & {
                                /**
                                 * User
                                 * @description A user in the system
                                 */
                                user: {
                                    /** Format: uri */
                                    avatar_url: string | null;
                                    /** Format: email */
                                    email: string;
                                    /** Format: uuid */
                                    id: string;
                                    name: string;
                                };
                            })[];
                            title: string;
                            /** Format: date-time */
                            updated_at: string;
                        };
                    };
                };
            };
            /** @description Collection not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "PWeb.CollectionController.update": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Collection ID */
                id: string;
            };
            cookie?: never;
        };
        /** @description CollectionUpdateRequest */
        requestBody: {
            content: {
                "application/json": {
                    /** @description New description for the collection */
                    description?: string;
                    /** @description New title for the collection */
                    title?: string;
                };
            };
        };
        responses: {
            /** @description Updated collection */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * CollectionDetail
                         * @description Collection data returned from show/create/update endpoints
                         */
                        data: {
                            description?: string | null;
                            /** Format: uuid */
                            id: string;
                            /** Format: date-time */
                            inserted_at: string;
                            photos: ({
                                allowed_to_delete: boolean;
                                /** Format: uri */
                                full_url: string;
                                /** Format: uuid */
                                id: string;
                                /** Format: date-time */
                                inserted_at: string;
                                /** Format: uri */
                                thumbnail_url: string;
                                title: string;
                                /** Format: date-time */
                                updated_at: string;
                            } & {
                                /**
                                 * User
                                 * @description A user in the system
                                 */
                                user: {
                                    /** Format: uri */
                                    avatar_url: string | null;
                                    /** Format: email */
                                    email: string;
                                    /** Format: uuid */
                                    id: string;
                                    name: string;
                                };
                            })[];
                            title: string;
                            /** Format: date-time */
                            updated_at: string;
                        };
                    };
                };
            };
            /** @description Collection not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Validation errors */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        errors: {
                            [key: string]: string[];
                        };
                    };
                };
            };
        };
    };
    "PWeb.CollectionController.update (2)": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Collection ID */
                id: string;
            };
            cookie?: never;
        };
        /** @description CollectionUpdateRequest */
        requestBody: {
            content: {
                "application/json": {
                    /** @description New description for the collection */
                    description?: string;
                    /** @description New title for the collection */
                    title?: string;
                };
            };
        };
        responses: {
            /** @description Updated collection */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * CollectionDetail
                         * @description Collection data returned from show/create/update endpoints
                         */
                        data: {
                            description?: string | null;
                            /** Format: uuid */
                            id: string;
                            /** Format: date-time */
                            inserted_at: string;
                            photos: ({
                                allowed_to_delete: boolean;
                                /** Format: uri */
                                full_url: string;
                                /** Format: uuid */
                                id: string;
                                /** Format: date-time */
                                inserted_at: string;
                                /** Format: uri */
                                thumbnail_url: string;
                                title: string;
                                /** Format: date-time */
                                updated_at: string;
                            } & {
                                /**
                                 * User
                                 * @description A user in the system
                                 */
                                user: {
                                    /** Format: uri */
                                    avatar_url: string | null;
                                    /** Format: email */
                                    email: string;
                                    /** Format: uuid */
                                    id: string;
                                    name: string;
                                };
                            })[];
                            title: string;
                            /** Format: date-time */
                            updated_at: string;
                        };
                    };
                };
            };
            /** @description Collection not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description Validation errors */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        errors: {
                            [key: string]: string[];
                        };
                    };
                };
            };
        };
    };
    "PWeb.PhotoController.index": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Photos */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        data: {
                            allowed_to_delete: boolean;
                            /** Format: uri */
                            full_url: string;
                            /** Format: uuid */
                            id: string;
                            /** Format: date-time */
                            inserted_at: string;
                            /** Format: uri */
                            thumbnail_url: string;
                            title: string;
                            /** Format: date-time */
                            updated_at: string;
                        }[];
                    };
                };
            };
        };
    };
    "PWeb.PhotoController.create": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description PhotoUploadRequest */
        requestBody: {
            content: {
                "multipart/form-data": {
                    /**
                     * Format: uuid
                     * @description Optional ID of the collection to add the photo to
                     */
                    collection_id?: string;
                    /**
                     * Format: binary
                     * @description Image file to process
                     */
                    photo: string;
                };
            };
        };
        responses: {
            /** @description Uploaded photos */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        data: {
                            allowed_to_delete: boolean;
                            /** Format: uri */
                            full_url: string;
                            /** Format: uuid */
                            id: string;
                            /** Format: date-time */
                            inserted_at: string;
                            /** Format: uri */
                            thumbnail_url: string;
                            title: string;
                            /** Format: date-time */
                            updated_at: string;
                        }[];
                    };
                };
            };
            /** @description Validation errors */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        errors: {
                            [key: string]: string[];
                        };
                    };
                };
            };
        };
    };
    "PWeb.PhotoController.delete": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Photo ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Photo deleted */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description Error message */
                        error: string;
                    };
                };
            };
        };
    };
    "PWeb.UserController.me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * User
                         * @description A user in the system
                         */
                        data: {
                            /** Format: uri */
                            avatar_url: string | null;
                            /** Format: email */
                            email: string;
                            /** Format: uuid */
                            id: string;
                            name: string;
                        };
                    };
                };
            };
        };
    };
}
